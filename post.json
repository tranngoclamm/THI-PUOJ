{"code":"#include <stdio.h>\r\n\r\ntypedef struct Student { \r\n    long long int id;\r\n    long long int score;\r\n    int rank; \r\n} Student;\r\n\r\n// Hàm hoán đổi\r\nvoid swap(Student *a, Student *b) {\r\n    Student temp = *a;\r\n    *a = *b;\r\n    *b = temp;\r\n}\r\n\r\n// Hàm bubbleSort\r\nvoid bubbleSort(Student arr[], long long int n) {\r\n    for (long long int i = 0; i < n - 1; i++) {\r\n        for (long long int j = 0; j < n - i - 1; j++) {\r\n            if (arr[j].score < arr[j + 1].score) {\r\n                swap(&arr[j], &arr[j + 1]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Hàm tìm kiếm tuần tự\r\nint sequentialSearch(Student students[], long long int n, long long int search_id) {\r\n    for (long long int i = 0; i < n; i++) {\r\n        if (students[i].id == search_id) {\r\n            return students[i].rank;\r\n        }\r\n    }\r\n    return -1; // Nếu không tìm thấy\r\n}\r\n\r\nint main() {\r\n    long long int n, m;\r\n    scanf(\"%lld %lld\", &n, &m);\r\n    Student students[n], sorted_students[n];\r\n\r\n    // Đọc thông tin sinh viên\r\n    for (long long int i = 0; i < n; i++) {\r\n        scanf(\"%lld %lld\", &students[i].id, &students[i].score);\r\n        sorted_students[i] = students[i]; \r\n    }\r\n\r\n    // Sắp xếp sinh viên theo điểm bằng bubbleSort\r\n    bubbleSort(sorted_students, n);\r\n\r\n    // Gán thứ tự xếp hạng\r\n    for (long long int i = 0; i < n; i++) {\r\n        sorted_students[i].rank = i + 1; \r\n    }\r\n\r\n    // Cập nhật thứ hạng cho mảng students\r\n    for (long long int i = 0; i < n; i++) {\r\n        long long int id = sorted_students[i].id;\r\n        for (long long int j = 0; j < n; j++) {\r\n            if (students[j].id == id) {\r\n                students[j].rank = sorted_students[i].rank;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Xử lý truy vấn\r\n    long long int query;\r\n    for (long long int i = 0; i < m; i++) {\r\n        scanf(\"%lld\", &query);\r\n        printf(\"%d \", sequentialSearch(students, n, query)); // Tìm kiếm tuần tự\r\n    }\r\n\r\n    return 0;\r\n}\r\n","input_data":"5 7\n111111 23\n222222 87\n333333 56\n444444 77\n555555 81\n111111 333333 555555 111111 444444 111111 555555"}